{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/components/SquareBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport './Square.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SquareBlock({\n  countSquare,\n  boardArray\n}) {\n  _s();\n\n  const [mouseTrack, setMouseTrack] = useState([]);\n\n  const addBlockToTrack = index => {\n    const row_index = Math.trunc(index / countSquare);\n    const column_index = index % countSquare;\n    const tmp = mouseTrack;\n    tmp.push({\n      id: mouseTrack.length,\n      row: row_index,\n      column: column_index\n    });\n    setMouseTrack(tmp);\n  };\n\n  const mainBlockStyle = {\n    gridTemplateColumns: `repeat(${countSquare}, 1fr)`,\n    gridTemplateRows: `repeat(${countSquare}, 1fr)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainBlock\",\n      style: mainBlockStyle,\n      children: boardArray.map((value, index) => /*#__PURE__*/_jsxDEV(Square, {\n        id: index,\n        addPath: addBlockToTrack\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mouseTrack.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" row: \", value.row, \"  column: \", value.column]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SquareBlock, \"okc8q+EnXrivTu5MYWM8duIQ5m8=\");\n\n_c = SquareBlock;\nexport default SquareBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"SquareBlock\");","map":{"version":3,"sources":["/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/components/SquareBlock.jsx"],"names":["React","useState","useEffect","Square","SquareBlock","countSquare","boardArray","mouseTrack","setMouseTrack","addBlockToTrack","index","row_index","Math","trunc","column_index","tmp","push","id","length","row","column","mainBlockStyle","gridTemplateColumns","gridTemplateRows","map","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAArB,EAAgD;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGL,WAAnB,CAAlB;AACA,UAAMS,YAAY,GAAGJ,KAAK,GAAGL,WAA7B;AACA,UAAMU,GAAG,GAAGR,UAAZ;AACAQ,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,MAAAA,EAAE,EAACV,UAAU,CAACW,MAAf;AAAuBC,MAAAA,GAAG,EAACR,SAA3B;AAAsCS,MAAAA,MAAM,EAACN;AAA7C,KAAT;AACAN,IAAAA,aAAa,CAACO,GAAD,CAAb;AACH,GAND;;AAOA,QAAMM,cAAc,GAAG;AACnBC,IAAAA,mBAAmB,EAAG,UAASjB,WAAY,QADxB;AAEnBkB,IAAAA,gBAAgB,EAAG,UAASlB,WAAY;AAFrB,GAAvB;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAA4B,MAAA,KAAK,EAAGgB,cAApC;AAAA,gBAEQf,UAAU,CAACkB,GAAX,CAAe,CAACC,KAAD,EAAQf,KAAR,kBACX,QAAC,MAAD;AAAqB,QAAA,EAAE,EAAIA,KAA3B;AAAkC,QAAA,OAAO,EAAED;AAA3C,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,gBAEQH,UAAU,CAACiB,GAAX,CAAgBC,KAAK,IAAI;AACrB,4BAAO;AAAA,+BAAYA,KAAK,CAACN,GAAlB,gBAAiCM,KAAK,CAACL,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA9BQhB,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Square from './Square'\nimport './Square.css'\n\nfunction SquareBlock({countSquare, boardArray}) {\n    const [mouseTrack, setMouseTrack] = useState([])\n    const addBlockToTrack = (index) => {\n        const row_index = Math.trunc(index / countSquare);\n        const column_index = index % countSquare;\n        const tmp = mouseTrack;\n        tmp.push({id:mouseTrack.length, row:row_index, column:column_index})\n        setMouseTrack(tmp)\n    }\n    const mainBlockStyle = {\n        gridTemplateColumns: `repeat(${countSquare}, 1fr)`,\n        gridTemplateRows: `repeat(${countSquare}, 1fr)`\n    }\n    return (\n        <div>\n            <div className =\"mainBlock\" style ={mainBlockStyle}>\n                {\n                    boardArray.map((value, index) => \n                        <Square key= {index} id = {index} addPath={addBlockToTrack} />) \n                }\n            </div>\n            <div>\n                {\n                    mouseTrack.map( value => {\n                        return <div> row: {value.row}  column: {value.column}</div>\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default SquareBlock\n"]},"metadata":{},"sourceType":"module"}