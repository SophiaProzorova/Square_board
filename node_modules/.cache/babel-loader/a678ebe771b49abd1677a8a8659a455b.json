{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport Square from './components/Square.jsx';\nimport SquareBlock from './components/SquareBlock';\nimport MousePath from './components/MousePath';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [squares, setSquares] = useState({\n    id: 'normal',\n    field: 5\n  }, {\n    id: 'middle',\n    field: 10\n  });\n  const [board, setBoard] = useState([]);\n  const [mouthPath, setMouthPath] = useState([]);\n  const [isChoosen, setIsChoosen] = useState(false);\n\n  const setBoardCount = count => {\n    const array = new Array(count * count).fill('');\n    setBoard(array);\n    setIsChoosen(true);\n  };\n\n  const [mouseTrack, setMouseTrack] = useState([]);\n\n  const addBlockToTrack = index => {\n    const row_index = Math.trunc(index / countSquare);\n    const column_index = index % countSquare;\n    const tmp = mouseTrack;\n    tmp.push({\n      id: mouseTrack.length,\n      row: row_index,\n      column: column_index\n    });\n    setMouseTrack(tmp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBoardCount(5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isChoosen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SquareBlock, {\n        countSquare: 5,\n        boardArray: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MousePath, {\n        list: mouseTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GXo+Nsm/Z66ASMy7DN/IodgTZh4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/App.js"],"names":["useEffect","useMemo","useState","Square","SquareBlock","MousePath","axios","App","squares","setSquares","id","field","board","setBoard","mouthPath","setMouthPath","isChoosen","setIsChoosen","setBoardCount","count","array","Array","fill","mouseTrack","setMouseTrack","addBlockToTrack","index","row_index","Math","trunc","countSquare","column_index","tmp","push","length","row","column"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,OAAnB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE,QAAL;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAD,EAA2B;AAACD,IAAAA,EAAE,EAAC,QAAJ;AAAcC,IAAAA,KAAK,EAAC;AAApB,GAA3B,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAE,KAAF,CAA1C;;AAEA,QAAMgB,aAAa,GAAIC,KAAD,IAAU;AAC9B,UAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAWF,KAAK,GAAGA,KAAnB,EAA0BG,IAA1B,CAA+B,EAA/B,CAAd;AACAT,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJD;;AAKA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGI,WAAnB,CAAlB;AACA,UAAMC,YAAY,GAAGL,KAAK,GAAGI,WAA7B;AACA,UAAME,GAAG,GAAGT,UAAZ;AACAS,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAACvB,MAAAA,EAAE,EAACa,UAAU,CAACW,MAAf;AAAuBC,MAAAA,GAAG,EAACR,SAA3B;AAAsCS,MAAAA,MAAM,EAACL;AAA7C,KAAT;AACAP,IAAAA,aAAa,CAACQ,GAAD,CAAb;AACH,GAND;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMd,aAAa,CAAC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,EAGIF,SAAS,gBACP;AAAA,8BACA,QAAE,WAAF;AAAc,QAAA,WAAW,EAAK,CAA9B;AAAkC,QAAA,UAAU,EAAIJ;AAAhD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAE,SAAF;AAAY,QAAA,IAAI,EAAIW;AAApB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,GAKL,IARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArCQhB,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import {useEffect, useMemo, useState} from 'react'\nimport Square from './components/Square.jsx';\nimport SquareBlock from './components/SquareBlock'\nimport MousePath from './components/MousePath'\nimport axios from 'axios'\nimport './App.css';\n\nfunction App() {\n\n  const [squares, setSquares] = useState({id: 'normal', field: 5}, {id:'middle', field:10});\n  const [board, setBoard] = useState([]);\n  const [mouthPath, setMouthPath] = useState([]);\n  const [isChoosen, setIsChoosen] = useState (false)\n\n  const setBoardCount = (count) =>{\n    const array = new Array (count * count).fill('');\n    setBoard(array)\n    setIsChoosen(true)\n  }\n  const [mouseTrack, setMouseTrack] = useState([]);\n  const addBlockToTrack = (index) => {\n      const row_index = Math.trunc(index / countSquare);\n      const column_index = index % countSquare;\n      const tmp = mouseTrack;\n      tmp.push({id:mouseTrack.length, row:row_index, column:column_index})\n      setMouseTrack(tmp)\n  }\n\n  \n\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => setBoardCount(5)}></button>\n      {\n        isChoosen ? (\n          <div>\n          < SquareBlock countSquare = { 5 } boardArray = {board} />\n          < MousePath list = {mouseTrack} />\n          </div>\n        ) : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}