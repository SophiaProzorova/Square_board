{"ast":null,"code":"var _jsxFileName = \"/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/components/Selection.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    backgroundColor: 'aqua',\n    marginTop: theme.spacing(8)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  }\n}));\nconst blockStyle = {\n  display: 'flex',\n  alignItems: 'baseline'\n};\n\nfunction Selection({\n  squares,\n  setCurrMode,\n  set\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [mode, setMode] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setMode(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: blockStyle,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-controlled-open-select-label\",\n        children: \"Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-controlled-open-select-label\",\n        id: \"demo-controlled-open-select\",\n        open: open,\n        onClose: handleClose,\n        onOpen: handleOpen,\n        value: mode,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Select Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), squares.map(item => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.field,\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"medium\",\n      onClick: () => setCurrMode(mode),\n      children: \"START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Selection, \"2+gDSeuQf1JrvyyOJ8mnlagi3K8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Selection;\nexport default Selection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selection\");","map":{"version":3,"sources":["/Users/sofia/Desktop/Work/react-projects/square_board/Square_board/src/components/Selection.jsx"],"names":["React","makeStyles","InputLabel","MenuItem","FormControl","Select","Button","useStyles","theme","button","display","backgroundColor","marginTop","spacing","formControl","margin","minWidth","blockStyle","alignItems","Selection","squares","setCurrMode","set","classes","mode","setMode","useState","open","setOpen","handleChange","event","target","value","handleClose","handleOpen","map","item","field","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    backgroundColor:'aqua',\n    marginTop: theme.spacing(8),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n  },\n}));\nconst blockStyle ={\n    display: 'flex',\n    alignItems: 'baseline'\n} \nfunction Selection({squares, setCurrMode, set}) {\n    const classes = useStyles();\n    const [mode, setMode] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n  \n    const handleChange = (event) => {\n      setMode(event.target.value);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n    return (\n        <div style={blockStyle}>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-controlled-open-select-label\">Mode</InputLabel>\n                <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                open={open}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                value={mode}\n                onChange={handleChange}\n                >\n                <MenuItem value=\"\">\n                    <em>Select Mode</em>\n                </MenuItem>\n                {\n                    squares.map(item => {\n                        return <MenuItem value={item.field}>{item.id}</MenuItem>\n                    })\n                }\n                </Select>\n            </FormControl>\n            <Button variant=\"contained\" size=\"medium\" onClick={()=>setCurrMode(mode)}>START</Button>\n        </div>\n    )\n}\n\nexport default Selection\n"]},"metadata":{},"sourceType":"module"}